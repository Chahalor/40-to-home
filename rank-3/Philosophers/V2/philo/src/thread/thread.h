/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   thread.h                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nduvoid <nduvoid@student.42mulhouse.fr>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/11 15:32:32 by nduvoid           #+#    #+#             */
/*   Updated: 2025/04/14 08:54:57 by nduvoid          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef THREAD_H
# define THREAD_H

# pragma once

/* ************************************************************************** */
/*                                 Headers                                    */
/* ************************************************************************** */
/* --- Systeme ---*/
# include <pthread.h>

/* --- Global --- */
# include "config.h"
# include "type.h"

/* --- Modules --- */
# include "utils.h"
# include "philosopher.h"

/* ************************************************************************** */
/*                                 Typedefs                                   */
/* ************************************************************************** */

typedef struct s_store		t_store;	/**/

typedef enum e_request		t_request;	/**/

/* ************************************************************************** */
/*                                 Enums                                      */
/* ************************************************************************** */

enum e_request
{
	run		= 0,
	print	= 1,
	store	= 2,
};

/* ************************************************************************** */
/*                                 Struct                                     */
/* ************************************************************************** */

struct s_store
{
	t_bool		*running;	/**/
	t_mutex		*print;		/**/
	t_mutex		*lock;		/**/
};

/* ************************************************************************** */
/*                                 Prototypes                                 */
/* ************************************************************************** */

void	*check(
	void *arg
);

int	start_simulation(
	t_philo *philosophers,
	t_thread *threads,
	const t_data data
);

void	*get_data(
	const t_request request,
	void *access
);

#endif	/* THREAD_H */
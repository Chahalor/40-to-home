/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   types.h                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nduvoid <nduvoid@student.42mulhouse.fr>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/15 09:22:19 by nduvoid           #+#    #+#             */
/*   Updated: 2025/04/15 09:45:31 by nduvoid          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef TYPES_H
# define TYPES_H

# pragma once

/* ************************************************************************** */
/*                                 Headers                                    */
/* ************************************************************************** */

/* Systeme */
	//...

/* Global */
	//...

/* Internal */
	//...

/* ************************************************************************** */
/*                                 Defines                                    */
/* ************************************************************************** */

//...

/* ************************************************************************** */
/*                                 Typedefs                                   */
/* ************************************************************************** */

typedef unsigned int	t_uint;		/**/


typedef enum e_bool		t_bool;		/**/
typedef enum e_expect	t_expect;	/**/
typedef enum e_exit		t_exit;		/**/

/* ************************************************************************** */
/*                                 Enums                                      */
/* ************************************************************************** */

enum e_bool
{
	FALSE = 0,
	TRUE = 1
};

enum e_expect
{
	UNEXPECTED = 0,
	EXPECTED = 1
};

enum e_exit
{
	EXIT_MALLOC = -2,
	EXIT_EINVAL = -1,
	EXIT_SUCCESS = 0,
	EXIT_HELP = 1,
	EXIT_VERSION = 2,
};

/* ************************************************************************** */
/*                                 Structs                                    */
/* ************************************************************************** */

//...

/* ************************************************************************** */
/*                                 Prototypes                                 */
/* ************************************************************************** */

//...

#endif	// TYPES_H